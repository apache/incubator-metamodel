diff --git a/core/src/main/java/org/apache/metamodel/query/parser/FromItemParser.java b/core/src/main/java/org/apache/metamodel/query/parser/FromItemParser.java
index cc8916a..cedd8ba 100644
--- a/core/src/main/java/org/apache/metamodel/query/parser/FromItemParser.java
+++ b/core/src/main/java/org/apache/metamodel/query/parser/FromItemParser.java
@@ -80,23 +80,32 @@ final class FromItemParser implements QueryPartProcessor {
     }
 
     private FromItem parseTableItem(String itemToken) {
-        final String[] tokens = itemToken.split(" ");
-        final String alias;
-        if (tokens.length == 2) {
-            alias = tokens[1];
-        } else if (tokens.length == 1) {
-            alias = null;
-        } else {
-            throw new QueryParserException("Not capable of parsing FROM token: " + itemToken);
-        }
-
-        final Table table = _dataContext.getTableByQualifiedLabel(tokens[0]);
+    	// From token can be starting with [
+    	String tableNameToken = "";
+    	String aliasToken = "";
+    	if(itemToken.trim().startsWith("[")){
+    		int endIndex = itemToken.trim().indexOf("]");
+    		tableNameToken = itemToken.trim().substring(1,endIndex);
+    		aliasToken = itemToken.trim().substring(1+endIndex).trim();
+    	}else{
+	        final String[] tokens = itemToken.split(" ");
+	        tableNameToken = tokens[0];
+	        if (tokens.length == 2) {
+	        	aliasToken = tokens[1];
+	        } else if (tokens.length == 1) {
+	        	aliasToken = null;
+	        } else {
+	            throw new QueryParserException("Not capable of parsing FROM token: " + itemToken);
+	        }
+    	}
+
+        final Table table = _dataContext.getTableByQualifiedLabel(tableNameToken);
         if (table == null) {
             throw new QueryParserException("Not capable of parsing FROM token: " + itemToken);
         }
 
         final FromItem result = new FromItem(table);
-        result.setAlias(alias);
+        result.setAlias(aliasToken);
         result.setQuery(_query);
         return result;
     }
